// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Common.proto

package Common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//返回结果
type RetType int32

const (
	RetType_RetType_Succeed    RetType = 0
	RetType_RetType_Failed     RetType = -1
	RetType_RetType_TimeOut    RetType = -100
	RetType_RetType_DisConnect RetType = -200
	RetType_RetType_Unknown    RetType = -400
	RetType_RetType_Invalid    RetType = -500
)

var RetType_name = map[int32]string{
	0:    "RetType_Succeed",
	-1:   "RetType_Failed",
	-100: "RetType_TimeOut",
	-200: "RetType_DisConnect",
	-400: "RetType_Unknown",
	-500: "RetType_Invalid",
}

var RetType_value = map[string]int32{
	"RetType_Succeed":    0,
	"RetType_Failed":     -1,
	"RetType_TimeOut":    -100,
	"RetType_DisConnect": -200,
	"RetType_Unknown":    -400,
	"RetType_Invalid":    -500,
}

func (x RetType) Enum() *RetType {
	p := new(RetType)
	*p = x
	return p
}

func (x RetType) String() string {
	return proto.EnumName(RetType_name, int32(x))
}

func (x *RetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RetType_value, data, "RetType")
	if err != nil {
		return err
	}
	*x = RetType(value)
	return nil
}

func (RetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{0}
}

//包加密算法
type PacketEncAlgo int32

const (
	PacketEncAlgo_PacketEncAlgo_FTAES_ECB PacketEncAlgo = 0
	PacketEncAlgo_PacketEncAlgo_None      PacketEncAlgo = -1
	PacketEncAlgo_PacketEncAlgo_AES_ECB   PacketEncAlgo = 1
	PacketEncAlgo_PacketEncAlgo_AES_CBC   PacketEncAlgo = 2
)

var PacketEncAlgo_name = map[int32]string{
	0:  "PacketEncAlgo_FTAES_ECB",
	-1: "PacketEncAlgo_None",
	1:  "PacketEncAlgo_AES_ECB",
	2:  "PacketEncAlgo_AES_CBC",
}

var PacketEncAlgo_value = map[string]int32{
	"PacketEncAlgo_FTAES_ECB": 0,
	"PacketEncAlgo_None":      -1,
	"PacketEncAlgo_AES_ECB":   1,
	"PacketEncAlgo_AES_CBC":   2,
}

func (x PacketEncAlgo) Enum() *PacketEncAlgo {
	p := new(PacketEncAlgo)
	*p = x
	return p
}

func (x PacketEncAlgo) String() string {
	return proto.EnumName(PacketEncAlgo_name, int32(x))
}

func (x *PacketEncAlgo) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PacketEncAlgo_value, data, "PacketEncAlgo")
	if err != nil {
		return err
	}
	*x = PacketEncAlgo(value)
	return nil
}

func (PacketEncAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{1}
}

//协议格式，请求协议在请求头中指定，推送协议在Init时指定
type ProtoFmt int32

const (
	ProtoFmt_ProtoFmt_Protobuf ProtoFmt = 0
	ProtoFmt_ProtoFmt_Json     ProtoFmt = 1
)

var ProtoFmt_name = map[int32]string{
	0: "ProtoFmt_Protobuf",
	1: "ProtoFmt_Json",
}

var ProtoFmt_value = map[string]int32{
	"ProtoFmt_Protobuf": 0,
	"ProtoFmt_Json":     1,
}

func (x ProtoFmt) Enum() *ProtoFmt {
	p := new(ProtoFmt)
	*p = x
	return p
}

func (x ProtoFmt) String() string {
	return proto.EnumName(ProtoFmt_name, int32(x))
}

func (x *ProtoFmt) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoFmt_value, data, "ProtoFmt")
	if err != nil {
		return err
	}
	*x = ProtoFmt(value)
	return nil
}

func (ProtoFmt) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{2}
}

type ProgramStatusType int32

const (
	ProgramStatusType_ProgramStatusType_None                 ProgramStatusType = 0
	ProgramStatusType_ProgramStatusType_Loaded               ProgramStatusType = 1
	ProgramStatusType_ProgramStatusType_Loging               ProgramStatusType = 2
	ProgramStatusType_ProgramStatusType_NeedPicVerifyCode    ProgramStatusType = 3
	ProgramStatusType_ProgramStatusType_NeedPhoneVerifyCode  ProgramStatusType = 4
	ProgramStatusType_ProgramStatusType_LoginFailed          ProgramStatusType = 5
	ProgramStatusType_ProgramStatusType_ForceUpdate          ProgramStatusType = 6
	ProgramStatusType_ProgramStatusType_NessaryDataPreparing ProgramStatusType = 7
	ProgramStatusType_ProgramStatusType_NessaryDataMissing   ProgramStatusType = 8
	ProgramStatusType_ProgramStatusType_UnAgreeDisclaimer    ProgramStatusType = 9
	ProgramStatusType_ProgramStatusType_Ready                ProgramStatusType = 10
	//OpenD登录后被强制退出登录，会导致连接全部断开,需要重连后才能得到以下该状态（并且需要在ui模式下）
	ProgramStatusType_ProgramStatusType_ForceLogout ProgramStatusType = 11
)

var ProgramStatusType_name = map[int32]string{
	0:  "ProgramStatusType_None",
	1:  "ProgramStatusType_Loaded",
	2:  "ProgramStatusType_Loging",
	3:  "ProgramStatusType_NeedPicVerifyCode",
	4:  "ProgramStatusType_NeedPhoneVerifyCode",
	5:  "ProgramStatusType_LoginFailed",
	6:  "ProgramStatusType_ForceUpdate",
	7:  "ProgramStatusType_NessaryDataPreparing",
	8:  "ProgramStatusType_NessaryDataMissing",
	9:  "ProgramStatusType_UnAgreeDisclaimer",
	10: "ProgramStatusType_Ready",
	11: "ProgramStatusType_ForceLogout",
}

var ProgramStatusType_value = map[string]int32{
	"ProgramStatusType_None":                 0,
	"ProgramStatusType_Loaded":               1,
	"ProgramStatusType_Loging":               2,
	"ProgramStatusType_NeedPicVerifyCode":    3,
	"ProgramStatusType_NeedPhoneVerifyCode":  4,
	"ProgramStatusType_LoginFailed":          5,
	"ProgramStatusType_ForceUpdate":          6,
	"ProgramStatusType_NessaryDataPreparing": 7,
	"ProgramStatusType_NessaryDataMissing":   8,
	"ProgramStatusType_UnAgreeDisclaimer":    9,
	"ProgramStatusType_Ready":                10,
	"ProgramStatusType_ForceLogout":          11,
}

func (x ProgramStatusType) Enum() *ProgramStatusType {
	p := new(ProgramStatusType)
	*p = x
	return p
}

func (x ProgramStatusType) String() string {
	return proto.EnumName(ProgramStatusType_name, int32(x))
}

func (x *ProgramStatusType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProgramStatusType_value, data, "ProgramStatusType")
	if err != nil {
		return err
	}
	*x = ProgramStatusType(value)
	return nil
}

func (ProgramStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{3}
}

//包的唯一标识，用于回放攻击的识别和保护
type PacketID struct {
	ConnID               *uint64  `protobuf:"varint,1,req,name=connID" json:"connID,omitempty"`
	SerialNo             *uint32  `protobuf:"varint,2,req,name=serialNo" json:"serialNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PacketID) Reset()         { *m = PacketID{} }
func (m *PacketID) String() string { return proto.CompactTextString(m) }
func (*PacketID) ProtoMessage()    {}
func (*PacketID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{0}
}

func (m *PacketID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketID.Unmarshal(m, b)
}
func (m *PacketID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketID.Marshal(b, m, deterministic)
}
func (m *PacketID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketID.Merge(m, src)
}
func (m *PacketID) XXX_Size() int {
	return xxx_messageInfo_PacketID.Size(m)
}
func (m *PacketID) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketID.DiscardUnknown(m)
}

var xxx_messageInfo_PacketID proto.InternalMessageInfo

func (m *PacketID) GetConnID() uint64 {
	if m != nil && m.ConnID != nil {
		return *m.ConnID
	}
	return 0
}

func (m *PacketID) GetSerialNo() uint32 {
	if m != nil && m.SerialNo != nil {
		return *m.SerialNo
	}
	return 0
}

type ProgramStatus struct {
	Type                 *ProgramStatusType `protobuf:"varint,1,req,name=type,enum=Common.ProgramStatusType" json:"type,omitempty"`
	StrExtDesc           *string            `protobuf:"bytes,2,opt,name=strExtDesc" json:"strExtDesc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ProgramStatus) Reset()         { *m = ProgramStatus{} }
func (m *ProgramStatus) String() string { return proto.CompactTextString(m) }
func (*ProgramStatus) ProtoMessage()    {}
func (*ProgramStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{1}
}

func (m *ProgramStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgramStatus.Unmarshal(m, b)
}
func (m *ProgramStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgramStatus.Marshal(b, m, deterministic)
}
func (m *ProgramStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramStatus.Merge(m, src)
}
func (m *ProgramStatus) XXX_Size() int {
	return xxx_messageInfo_ProgramStatus.Size(m)
}
func (m *ProgramStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramStatus proto.InternalMessageInfo

func (m *ProgramStatus) GetType() ProgramStatusType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ProgramStatusType_ProgramStatusType_None
}

func (m *ProgramStatus) GetStrExtDesc() string {
	if m != nil && m.StrExtDesc != nil {
		return *m.StrExtDesc
	}
	return ""
}

func init() {
	proto.RegisterEnum("Common.RetType", RetType_name, RetType_value)
	proto.RegisterEnum("Common.PacketEncAlgo", PacketEncAlgo_name, PacketEncAlgo_value)
	proto.RegisterEnum("Common.ProtoFmt", ProtoFmt_name, ProtoFmt_value)
	proto.RegisterEnum("Common.ProgramStatusType", ProgramStatusType_name, ProgramStatusType_value)
	proto.RegisterType((*PacketID)(nil), "Common.PacketID")
	proto.RegisterType((*ProgramStatus)(nil), "Common.ProgramStatus")
}

func init() {
	proto.RegisterFile("Common.proto", fileDescriptor_ee72d9a89737215c)
}

var fileDescriptor_ee72d9a89737215c = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xdf, 0x6e, 0x12, 0x4f,
	0x14, 0xc7, 0xd9, 0x6d, 0x7f, 0x2d, 0x3d, 0x3f, 0xa9, 0xd3, 0x69, 0xa8, 0xf4, 0x8f, 0x8a, 0xf5,
	0x1f, 0x92, 0xc8, 0x85, 0xf1, 0xda, 0x04, 0x76, 0x21, 0xc1, 0xd4, 0x4a, 0x16, 0xf0, 0x52, 0x32,
	0xdd, 0x3d, 0xac, 0x93, 0xb2, 0x33, 0x9b, 0x99, 0x59, 0x95, 0x6b, 0x6f, 0x7d, 0x04, 0x9f, 0xc3,
	0xf8, 0x00, 0x3e, 0x90, 0x0f, 0x60, 0xd4, 0xb0, 0x40, 0x0b, 0x61, 0xe9, 0x5e, 0xcd, 0xf9, 0x7e,
	0x3f, 0x67, 0xce, 0x39, 0x7b, 0x06, 0x6e, 0x39, 0x32, 0x8a, 0xa4, 0xa8, 0xc5, 0x4a, 0x1a, 0x49,
	0xb7, 0xa6, 0xd1, 0xe9, 0x2b, 0xc8, 0x77, 0x98, 0x7f, 0x89, 0xa6, 0xed, 0xd2, 0x03, 0xd8, 0xf2,
	0xa5, 0x10, 0x6d, 0xb7, 0x64, 0x95, 0xed, 0xca, 0xa6, 0x37, 0x8b, 0xe8, 0x11, 0xe4, 0x35, 0x2a,
	0xce, 0x46, 0xe7, 0xb2, 0x64, 0x97, 0xed, 0x4a, 0xc1, 0xbb, 0x8a, 0x4f, 0xdf, 0x43, 0xa1, 0xa3,
	0x64, 0xa8, 0x58, 0xd4, 0x35, 0xcc, 0x24, 0x9a, 0x3e, 0x87, 0x4d, 0x33, 0x8e, 0x31, 0xbd, 0x62,
	0xf7, 0xc5, 0x61, 0x6d, 0x56, 0x75, 0x09, 0xea, 0x8d, 0x63, 0xf4, 0x52, 0x8c, 0xde, 0x03, 0xd0,
	0x46, 0x35, 0x3f, 0x1b, 0x17, 0xb5, 0x5f, 0xb2, 0xcb, 0x56, 0x65, 0xc7, 0x5b, 0x50, 0xaa, 0xdf,
	0x2d, 0xd8, 0xf6, 0xd0, 0x4c, 0x32, 0xe8, 0x3e, 0xdc, 0x9e, 0x1d, 0x07, 0xdd, 0xc4, 0xf7, 0x11,
	0x03, 0x92, 0xa3, 0xc7, 0xb0, 0x3b, 0x17, 0x5b, 0x8c, 0x8f, 0x30, 0x20, 0x7f, 0xe7, 0x9f, 0x45,
	0x4f, 0xae, 0x33, 0x7a, 0x3c, 0xc2, 0xb7, 0x89, 0x21, 0xdf, 0xae, 0xdd, 0xfb, 0x40, 0xe7, 0xae,
	0xcb, 0xb5, 0x23, 0x85, 0x40, 0xdf, 0x90, 0x1f, 0x7f, 0xb2, 0xd2, 0xfb, 0xe2, 0x52, 0xc8, 0x4f,
	0x82, 0xfc, 0xfa, 0x9d, 0xe5, 0xb6, 0xc5, 0x47, 0x36, 0xe2, 0x01, 0xf9, 0x7a, 0xe5, 0x56, 0xbf,
	0x58, 0x50, 0x98, 0xfe, 0xd9, 0xa6, 0xf0, 0xeb, 0xa3, 0x50, 0xd2, 0x63, 0xb8, 0xb3, 0x24, 0x0c,
	0x5a, 0xbd, 0x7a, 0xb3, 0x3b, 0x68, 0x3a, 0x0d, 0x92, 0x9b, 0xf4, 0xb2, 0x6c, 0x9e, 0x4b, 0x81,
	0x8b, 0xa3, 0x1c, 0x42, 0x71, 0x19, 0x98, 0xe7, 0xae, 0xb1, 0x9c, 0x86, 0x43, 0xec, 0xea, 0x4b,
	0xc8, 0x77, 0x26, 0xfb, 0x6e, 0x45, 0x86, 0x16, 0x61, 0x6f, 0x7e, 0x1e, 0xa4, 0x87, 0x8b, 0x64,
	0x48, 0x72, 0x74, 0x2f, 0xdd, 0xe0, 0x54, 0x7e, 0xad, 0xa5, 0x20, 0x56, 0xf5, 0xe7, 0x46, 0x8a,
	0x2e, 0x2f, 0x8c, 0x1e, 0xc1, 0xc1, 0x8a, 0x38, 0x6d, 0x33, 0x47, 0x4f, 0xa0, 0xb4, 0xea, 0x9d,
	0x49, 0x16, 0x60, 0x40, 0xac, 0x75, 0x6e, 0xc8, 0x45, 0x48, 0x6c, 0xfa, 0x14, 0x1e, 0x66, 0xdc,
	0x8b, 0x18, 0x74, 0xb8, 0xff, 0x0e, 0x15, 0x1f, 0x8e, 0x1d, 0x19, 0x20, 0xd9, 0xa0, 0xcf, 0xe0,
	0xf1, 0x1a, 0xf0, 0x83, 0x14, 0xb8, 0x80, 0x6e, 0xd2, 0x07, 0x70, 0x77, 0x4d, 0xc5, 0xd9, 0x23,
	0xf9, 0x2f, 0x1b, 0x69, 0x49, 0xe5, 0x63, 0x3f, 0x0e, 0x98, 0x41, 0xb2, 0x45, 0xab, 0xf0, 0x24,
	0xab, 0xa0, 0xd6, 0x4c, 0x8d, 0x5d, 0x66, 0x58, 0x47, 0x61, 0xcc, 0xd4, 0x64, 0x8a, 0x6d, 0x5a,
	0x81, 0x47, 0x37, 0xb2, 0x6f, 0xb8, 0xd6, 0x13, 0x32, 0x9f, 0x3d, 0x6f, 0x5f, 0xd4, 0x43, 0x85,
	0xe8, 0x72, 0xed, 0x8f, 0x18, 0x8f, 0x50, 0x91, 0x9d, 0xf4, 0xc1, 0xac, 0x80, 0x1e, 0xb2, 0x60,
	0x4c, 0xe0, 0x86, 0xf6, 0xcf, 0x64, 0x28, 0x13, 0x43, 0xfe, 0x6f, 0x14, 0x61, 0xdf, 0x97, 0x51,
	0x6d, 0x98, 0x98, 0xa4, 0x26, 0x63, 0x14, 0x2c, 0xe6, 0xb5, 0xf8, 0xe2, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xef, 0xcc, 0x30, 0xaa, 0x09, 0x04, 0x00, 0x00,
}
